@* @page *@
@model CVGenerator.Models.CVModel
@{
    ViewData["Title"] = "Create CV";
}

<div style="margin-bottom: 80px;">
    <h1 class="text-center display-4">Prepare CV</h1>

    <form action="@Url.Action("Preview", "CV")" method="post" class="form" onsubmit="return verifyFormEntries(event);">
        <div class="form-group md-4">
            <label for="name" class="form-label">Name</label>
            @* TODO: recover the previous data in case of redirect *@
            <input type="text" class="form-control" id="name" name="name" required placeholder="Full Name">
        </div>

        <div class="form-group md-4">
            <label for="phone" class="form-label">Contact</label>
            <input type="tel" class="form-control" id="phone" name="phone" required placeholder="Phone Number">
        </div>

        <div class="form-group md-4">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email" required placeholder="Email Address">
        </div>

        <div class="form-group md-4">
            <label for="address" class="form-label">Address</label>
            <input class="form-control" id="address" name="address" required placeholder="Town,City,County" rows="10">
            <span asp-validation-for="Address" class="text-danger"></span>
        </div>

        <hr />

        <div class="form-group md-4">
            <label for="professional-summary" class="form-label">Professional Summary (each in a new line)</label>
            <textarea class="form-control" id="professional_summary" name="ProfessionalSummary" required 
             placeholder="A brief description of the user's skills, expertise, and career objectives..." rows="10"></textarea>
        </div>

        <hr />

        <div class="form-group md-4">
            <label for="work-experience" class="form-label">Work Experience (CSV: title,company,date of employment,expertise)</label>
            <textarea class="form-control" id="work_experience" name="WorkExperience" required
             placeholder="List of jobs with details including job title, company name, dates of employment, A brief description of the user's skills, expertise, and career objectives and job description..." 
             rows="10"></textarea>
        </div>

        <hr />

        <div class="form-group md-4">
            <label for="education_background" class="form-label">Education Background (CSV each on A new line: institution,certification,graduation date)</label>
            <textarea class="form-control" id="education_background" name="EducationBackground" required 
            placeholder="List of schools with details including degree, institution name, and graduation date..." 
            rows="10"></textarea>
        </div>

        <hr />

        <div class="form-group md-4">
            <label for="skills" class="form-label">Skills (each skills including A new line)</label>
            <textarea class="form-control" id="skills" name="Skills" required
             placeholder="List of professional skills..." rows="10"></textarea>
        </div>

        <hr />

        <div class="form-group md-4">
            <label for="languages" class="form-label">Language (language,proficiency) each including A new line</label>
            <textarea class="form-control" id="languages" name="Languages" required 
            placeholder="List of languages spoken with proficiency level..." rows="10"></textarea>
        </div>

        <hr />

        <div class="form-group md-4">
            <button type="submit" class="btn btn-primary">Preview CV</button>
        </div>

    </form>

    <script>
        function verifyFormEntries(event) {
            // Prevent the form submission to allow validation
            @* event.preventDefault(); *@

            var name = document.getElementById("name").value;
            var phone = document.getElementById("phone").value;
            var email = document.getElementById("email").value;

            var address = document.getElementById("address").value; // Town, City, Country
            var professionalSummary = document.getElementById("professional_summary").value.split("\n"); // description of your skills, expertise, and career objectives
            var workExperience = document.getElementById("work_experience").value.split("\n"); // title, company, date of employment, expertise
            var educationBackground = document.getElementById("education_background").value.split("\n"); // institution, certification, graduation date
            var skills = document.getElementById("skills").value.split("\n"); // skill, level of proficiency
            var languages = document.getElementById("languages").value.split("\n"); // language, level of proficiency

            // address meets the criteria
            if (address.split(",").length != 3) {
                alert("Address should be in the format: Town, City, Country");

                document.getElementById("address").focus();
                return false;
            }

            // professionalSummary is not empty
            if (professionalSummary == "") {
                alert("Professional Summary should not be empty");

                document.getElementById("professional_summary").focus();
                return false;
            }

            // workExperience is not empty and meets the criteria
            if (workExperience == "") {
                alert("Work Experience should not be empty");

                document.getElementById("work_experience").focus();
                return false;
            }
            // loop through the workExperience array to check if each element at least 3 elements
            for (let i = 0; i < workExperience.length; i++) {
                if (workExperience[i].split(",").length < 3/*4*/) {
                    alert("Work Experience should be in the format: title, company, date of employment, expertise");

                    document.getElementById("work_experience").focus();
                    return false;
                }
            }

            // educationBackground is not empty and meets the criteria
            if (educationBackground == "") {
                alert("Education Background should not be empty");

                document.getElementById("education_background").focus();
                return false;
            } 
            // loop through the educationBackground array to check if each element at least 3 elements
            for (let i = 0; i < educationBackground.length; i++) {
                if (educationBackground[i].split(",").length != 3) {
                    alert("Education Background should be in the format: institution, certification, graduation date");

                    document.getElementById("education_background").focus();
                    return false;
                }
            }

            // If skills is not empty
            if (skills == "") {
                alert("Skills should not be empty");

                document.getElementById("skills").focus();
                return false;
            }
            // loop through the skills array to check if each element at least 2 elements
            for (let i = 0; i < skills.length; i++) {
                if (skills[i].split(",").length != 2) {
                    alert("Skills should be in the format: skill, level of proficiency");

                    document.getElementById("skills").focus();
                    return false;
                }
            }

            // If languages is not empty
            if (languages == "") {
                alert("Languages should not be empty");

                document.getElementById("languages").focus();
                return false;
            }
            // loop through the languages array to check if each element at least 2 elements
            for (let i = 0; i < languages.length; i++) {
                if (languages[i].split(",").length != 2) {
                    alert("Languages should be in the format: language, level of proficiency");

                    document.getElementById("languages").focus();
                    return false;
                }
            }

            return true;
        }
    </script>
</div>
