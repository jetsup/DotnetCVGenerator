@using System.Linq;

@{
    Layout = null; // Ensure no layout is applied
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Name's CV</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Helvetica', sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
        }

        .sidebar {
            background-color: #007bff;
            color: white;
            padding: 20px;
            width: 25%;
            height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
        }

        .sidebar h1 {
            font-size: 1.8rem;
            margin-bottom: 15px;
        }

        .sidebar p {
            font-size: 0.9rem;
            margin-bottom: 10px;
        }

        .main-content {
            margin-left: 25%;
            padding: 30px;
        }

        .section-title {
            font-size: 1.5rem;
            color: #007bff;
            border-bottom: 2px solid #007bff;
            margin-bottom: 15px;
        }

        .list-group-item {
            border: none;
            padding: 5px 0;
        }

        .download-buttons {
            text-align: center;
            margin-top: 30px;
        }
    </style>
</head>

<body>
    <div class="sidebar">
        <h1>@Model.Name</h1>
        <p>@Model.Email</p>
        <p>@Model.Phone</p>
        <p>@Model.Address</p>

        <h3 class="mt-4">Skills</h3>
        <ul class="list-unstyled">
            @foreach (var skill in @Model.Skills.Split("\n"))
            {
                var details = skill.Split(',');
                <li>@details[0] <span class="text-light">(@details[1])</span></li>
            }
        </ul>

        <h3 class="mt-4">Languages</h3>
        <ul class="list-unstyled">
            @foreach (var language in @Model.Languages.Split("\n"))
            {
                var details = language.Split(',');
                <li>@details[0] <span class="text-light">(@details[1] proficiency)</span></li>
            }
        </ul>
    </div>

    <div class="main-content">
        <!-- Professional Summary -->
        <div>
            <h2 class="section-title">Professional Summary</h2>
            <p>@Model.ProfessionalSummary</p>
        </div>

        <!-- Work Experience -->
        <div>
            <h2 class="section-title">Work Experience</h2>
            <ul class="list-group">
                @foreach (var experience in @Model.WorkExperience.Split("\n"))
                {
                    var details = experience.Split(',');
                    <li class="list-group-item">
                        <strong>@details[0]</strong> at @details[1] <br>
                        <small>@details[2]</small>
                    </li>
                }
            </ul>
        </div>

        <!-- Education -->
        <div>
            <h2 class="section-title">Education</h2>
            <ul class="list-group">
                @foreach (var education in @Model.EducationBackground.Split("\n"))
                {
                    var details = education.Split(',');
                    <li class="list-group-item">
                        <strong>@details[0]</strong> <br>
                        @details[1], Class of @details[2]
                    </li>
                }
            </ul>
        </div>

        @if (Context.Request.Path == "/cv/preview")
        {
            @* place the buttons one on left the other in the right *@
            <div class="container text-center mb-4 justify-content-between">
                <a href="/cv/" class="btn btn-primary me-5" style="min-width: 150px;">Back</a>
                <a href="/cv/pdf" class="btn btn-success ms-5" style="min-width: 150px;">Download CV</a>
            </div>
        }
    </div>
</body>

</html>
